name: Deploy Monorepo to Azure

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
  workflow_dispatch:  # manual trigger

jobs:
  detect-changes:
    name: Detect Changed Folder
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  deploy-frontend:
    name: Deploy Frontend
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build React frontend
        run: |
          npm install
          npm run build

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: stockanalyzeracr.azurecr.io
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push Docker image (frontend)
        run: |
          docker build -t stockanalyzeracr.azurecr.io/stock-frontend:latest .
          docker push stockanalyzeracr.azurecr.io/stock-frontend:latest

  deploy-backend:
    name: Deploy Backend
    needs: detect-changes
    if: needs.detect-changes.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Publish backend
        run: |
          dotnet publish -c Release -o out

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: stockanalyzeracr.azurecr.io
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push Docker image (backend)
        run: |
          docker build -t stockanalyzeracr.azurecr.io/stock-backend:latest .
          docker push stockanalyzeracr.azurecr.io/stock-backend:latest
