name: Deploy Monorepo to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:  # allows manual trigger from GitHub UI

jobs:
  deploy-frontend:
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(join(github.event.commits.*.message), '[frontend]') ||
      contains(join(github.event.commits.*.modified), 'frontend/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build React frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        working-directory: ./frontend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/stock-frontend:latest .
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/stock-frontend:latest

  deploy-backend:
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(join(github.event.commits.*.message), '[backend]') ||
      contains(join(github.event.commits.*.modified), 'backend/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Build FastAPI backend Docker image
        working-directory: ./backend
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/stock-backend:latest .
      
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push image
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/stock-backend:latest
